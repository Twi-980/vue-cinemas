
@import url(./font.css);
/* @import "./font.css"; можно так */

:root /* (псевдокласс) */ {
    --linkHover: #ED8E00;
    --btnBg: #F18128;
    --btnHover: #040D1F;
    --bodyBg: #040D1F;
    --title: #F18128;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

*::-webkit-scrollbar { /* отвечает за саму белую линию не за ползунок */
    width: 6px;
    height: 6px;
}

*::-webkit-scrollbar-corner { /* отвечает за уголочек нижни в правой стороне */
    background: var(--title);
}

*::-webkit-scrollbar-thumb { /* сам ползунок */
    background: var(--title);
    border-radius: 3px;
}

a {
    text-decoration: none;
}

ul {
    list-style: none;
}

button {
    border: none;
    background: transparent;
    /* при наведении на кнопки появляется пальчик */
    cursor: pointer;
}

body {
    font-family: 'Comfortaa';
    background: var(--bodyBg);
}

.container {
    max-width: 1143px;
    width: 100%;
    padding: 0 15px;
    margin: 0 auto;
}

.btn {
    width: 166px; /* когда ширина такая маленькая, в пределах 200px, то ширину можно указывать фиксированную без maxwidth, так как мы не будемп ширину уменьшать настолько узко, кнопка всегда будем оставаться нетронутой, так что можно оставлять фиксированную */
    padding: 17px 48px;
    background: var(--btnBg); 
    border-radius: 4px;
    /* для кнопок свойство text-align не нужно, но для текста justify дает: каждая строчка начинается с левой стороны и заканчивается прям на самой грани, получается ровный прямоугольник. ОН добавляет отступы между словами таким образом, чтобы последнее слово заканчивалось ровно на границе.
    text-align: justify;  */
    color: black; font-size: 14px; 
    font-family: 'Roboto'; 
    font-weight: 500; 
    /* line height не может быть меньше font size, в этом случае указываем 100% */
    line-height: 100%; 
    box-shadow: 0 0 10px 0 var(--btnHover);
    transition: 500ms;
}

.btn:hover {
    background: var(--btnHover);
    box-shadow: 0 0 10px 0 var(--btnBg);
    color: white;
}

.title {
    color: var(--title); 
    font-size: 36px; 
    font-weight: 400; 
    line-height: 100%;
    text-transform: capitalize; 
    width: max-content; /* теперь он занимает ту ширину, которая необходимо для его содержимого  */
    position: relative; /* чтобы псевдоэлемент за пределы заголовка никуда не улетел */
    padding-bottom: 12px; /* (10 px вниз отступ + 2 px нижнее подчеркивание = 12px) */
    margin-bottom: 45px;
}

.title::after {
    content: '';
    /* псевдоэлементы по умолчанию строчные */
    display: block;
    background: var(--title);
    height: 2px;
    width: 100%; /* 100% от заголовка и будет занимать всю ширину родителя (контейнера)  */
    /* тег h1, h2, h3 блочные элементы, они занимают всю ширину родителя (контейнера). */
    position: absolute; 
    bottom: 0;
    /* чтобы раскрывалось от центра в обе стороны */
    left: 50%;
    width: 0; /* останется невидимым до тех пор пока не наведем курсор на (контейнер)  */
    transition: 500ms;
    border-radius: 23px 23px 0 0;
}
/* до этой строчки были созданы (прописаны) базовые стилевые свойства */

.ads {
    padding: 20px;
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 24px;
    background: linear-gradient(90deg, #3800AF 0%, #BF7204 98%, #C27500 100%, #C27500 100%);
}

.ads__text {
    color: white; 
    font-size: 16px; 
    font-weight: 400;
    line-height: 100%;
    max-width: 166px;
    width: 100%;
}

.header {
    position: sticky; /* весь остальной контент будет проходить под ним, под навигационной панелью */
    top: 0;
    left: 0;
    z-index: 1000;
}

.header__nav {
    background: rgba(1, 3, 5, 0.80); 
    backdrop-filter: blur(15px);
    position: relative;
}

.header__nav .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header__logo {
    display: flex;
    align-items: flex-end;
    column-gap: 5px;
}

.header__logo span {
    color: white; 
    font-size: 18px; 
    font-weight: 700;
    line-height: 100%;
    font-family: 'Comfortaa';
}

.header__menu {
    width: 50px;
    height: 50px;
    display: none;
    flex-direction: column;
    justify-content: center;
    row-gap: 5px;
}

.header__menu span {
    height: 8px;
    width: 100%;
    background: white;
    border-radius: 3px;
    transition: 500ms linear;
}

.header__menu:focus span {
    background: var(--linkHover);
}

.header__menu:hover span {
    background: var(--linkHover);
}

.header__menu:focus span:nth-child(1) {
    transform: rotate(45deg) translateY(20px) translateY(-11px) translateX(20px) translateX(-11px);
}

.header__menu:focus span:nth-child(2) {
    transform: rotate(-45deg);
    opacity: 0;
}

.header__menu:focus span:nth-child(3) {
    transform: rotate(-45deg) translateY(-20px) translateY(11px) translateX(20px) translateX(-11px);
}


.header__list {
    display: flex;
    column-gap: 18px;
}

.header__link {
    color: white; 
    font-size: 14px; 
    font-family: Montserrat; 
    font-weight: 400;
    line-height: 100%;
    padding: 43px 6px /* (30px - 2*6=18px) */;  
    text-transform: capitalize;
    display: block;
    transition: 500ms;
    position: relative;
}

.header__link::after {
    content: ''; 
    display: block;
    height: 2px;
    background: #ED8E00; 
    border-top-left-radius: 23px; 
    border-top-right-radius: 10px;
    position: absolute; /* (чтобы выбить из потока) */
    bottom: 0;
    left: 50%; /* по умолчанию он будет начинаться ровно от середины */
    width: 0;
    transition: 500ms linear;
    
}

.header__link:hover:after { /* псевдоэлемент after пишется без пробелов */
    width: 100%;
    left: 0; /* при наведении на ссылку псевдоэлемент встанет на место */
}

.header__link:hover {
    color: var(--linkHover);
}

.banner {
    height: 100vh; /* как обычно */
    position: relative;
    display: flex; /* его мы даем родителю, чтобы элементы, еоторые находятся внутри него и не имеют фиксированной высоты, чтобы они растягивались на всю высоту */
    /* height: 100%; */ /* тот же самы эффект, что и display: flex дает ; */
}

.banner .container {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.banner::after { /* псевдоэлемент ко всей секции */
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background: rgba(7, 15, 25, 0.75);
    position: absolute; /* его тоже нужно выбивать с потока с основного */
    top: 0;
    left: 0;
    z-index: -1; /* утопить под элементы */
}

.banner__img { 
    position: absolute;
    top: 0;
    left: 0;
    z-index: -2; /* на один уровень ниже чем background темный */
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.banner__title {
    color: white; 
    font-size: 64px; 
    font-family: 'Montserrat'; 
    font-weight: 700; 
    line-height: 100%;
    text-transform: capitalize;
    margin-bottom: 30px;
}

.banner_desc {
    text-align: justify; 
    color: #C8C8C8; 
    font-size: 16px; 
    font-family: 'Montserrat'; 
    font-weight: 400; 
    line-height: 150%; 
    max-width: 570px;
    width: 100%;
    margin-bottom: 50px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 4;
    overflow: hidden;
}

.banner__btns {
    display: flex;
    column-gap: 30px;
}

.films {
    padding: 60px 0 77px;
}

.films:hover .title:after {
    width: 100%;
    left: 0;
}

.films__cards {
    display: flex;
    justify-content: space-between;
}

.films__item {
    border-radius: 6px;
    overflow: hidden;
    max-width: 255px;
    width: 100%;
   /*  высота будет зависеть от содержимого */
    padding: 54px 15px 18px;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.films__item::after /* задний фон будем делать с помощью псевдоэлемента */ { 
    content: '';
    display: block; /* делаем блочным, чтобы работала ширина и высота */
    width: 100%;
    height: 100%;
    position: absolute; /* выбиваем из потока как картинку */
    top: 0;
    left: 0;
    background: linear-gradient(180deg, rgba(241, 129, 40, 0.35) 0%, rgba(0, 0, 0, 0.71) 51%, rgba(7, 15, 25, 0.80) 100%);
    z-index: -1; /* картинка -2, а затемнение над ним значит -1 */

}  

.films__img {
    /* стандартный набор для картинки, отсюда начинается  */
    position: absolute;
    z-index: -2; /* топим в самый низ */
    width: 100%;
    height: 100%; /* растягиваем на всю высоту блока */
    object-fit: cover; /* чтобы пропорции не терялись */ 
    /* позиционируем по левому верхнему краю */
    top: 0;
    left: 0;
    /* стандартный набор для картинки, здесь заканчивается  */
    transition: 500ms;
}

.films__item:hover .films__img {
    transform: scale(1.2); /* увеличивать в 1.2 раза */
    /* animation: img 500ms 1 linear; */ /* 1 - название анимации, 2 - время, за сколько минут должна произойти анимация, 3 - количество анимаций, 4- чтобы анимация выполнялась равномерно, вместо 1(кол-во анимаций) можно было написать infinite - анимация будет выполняться постоянно  */
}

.films__item:hover .films__time {
    transform: scale(0);
}

.films__item:hover .films__icon {
    transform: scale(1.5) rotateX(180deg) translateY(-15px); /* увеличивать в 1.5 раза */ /* translate - двигает вниз или вверх */
}

/* чтобы запустить анимацию, которую мы назвали img
@keyframes img { /* после названия правила keyframes идет название анимации */ 
    /* 0% */ /* на нулевом кадре будут следующие свойства */ /* { */
        /* transform: scale(1 */ /* начальная точка анимации *//* ); */
    /* } */

    /* 100% */ /* { конечная точка анимации */
    /* transform: scale(1.2);
    } */
/* }  */

.films__icon {
    margin-bottom: 12px;
    transition: 500ms;
}

.films__time {
    background: rgba(7, 15, 25, 0.20); 
    border-radius: 9px; 
    border: 1px white solid;
    padding: 7px 27px;
    color: white; 
    font-size: 14px; 
    font-family: 'Montserrat'; 
    font-weight: 400; 
    line-height: 100%; 
    margin-bottom: 38px;
    transition: 500ms;
}

.films__item-title {
    text-align: center; 
    color: white; 
    font-size: 22px; 
    font-family: 'Montserrat'; 
    font-weight: 400;
    line-height: 27px;
    text-transform: capitalize;
    margin-bottom: 12px;
}

.films__desc {
    color: white; 
    font-size: 14px; 
    font-family: 'Roboto'; 
    font-weight: 400; 
    line-height: 150%; 
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 7;
    overflow: hidden;
}

.cartoons {
    padding: 42px;
    display: flex; /* для того чтобы растянуть контейнер, чтобы высоту не добавлять для контейнера */
    position: relative;
    height: 500px;
}

.cartoons::after {
    content: '';
    display: block;
    background: linear-gradient(90deg, #DEF7FF 0%, #F4FCFF 45%, rgba(255, 255, 255, 0) 100%); 
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
}

.cartoons__video {
    position: absolute;
    z-index: -2;
    width: 60%;
    height: 100%; /* 100% от родителя cartoons */
    top: 0;
    right: 0;
    object-fit: cover; чтобы растянуть, чтобы она занимала ту ширину, которую мы указали
}

.cartoons__logo {
    margin-bottom: 51px;
    transform: translateX(-20px); /* чтобы подвинуть лого налево */
    max-width: 460px; /* теперь ширина будет адаптивной, если ей не будет хватать место она будет уменьшаться */
    width: 100%;
}

.cartoons__desc {
    text-align: justify; 
    color: black; 
    font-size: 18px; 
    font-family: 'Roboto'; 
    font-weight: 400; 
    line-height: 150%; 
    margin-bottom: 55px;
    max-width: 558px;
    width: 100%;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 5;
    overflow: hidden;
}

.collections {
    padding-top: 61px;   
}

.collections:hover .title::after {
    width: 100%;
    left: 0; /* а то псевдоэлемент уйдет в сторону */
}

.collections__cards {
    display: flex;
    justify-content: space-between;
}

.collections__item /* родитель .collections__img */ {
    max-width: 350px;
    width: 100%;
    height: 193px; /* высоту тоже нужно будет задавать, потому что у нас контент будет маленьким только иконка и заголовок, все остальное  мы будем ставить с помощью position absolute */
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 6px;
    overflow: hidden; /* все что будет вываливаться за вот эти скругленные углы мы будем скрывать */
}

.collections__item::after {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    background: linear-gradient(270deg, rgba(7, 15, 25, 0.56) 0%, rgba(49.08, 113.69, 9.47, 0.56) 100%);
}

.collections__item:hover .collections__img {
    transform: scale(1.2);
}

.collections__item:hover .collections__item-title {
    transform: scale(0);
}

.collections__item:hover .collections__icon {
    transform: scale(1.5) rotateX(180deg) translateY(-15px);
}

.collections__item:hover .collections__line:nth-last-of-type(2) {
    transform: translateY(-200% /* при адаптации размер карточки может поменяться и немножко будет торчать если мы сделаем меньше */);
}

.collections__item:hover .collections__line:nth-last-of-type(1) {
    transform: translateY(200%);
}

.collections__img {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    object-fit: cover; /* если это не добавим, то картинка будет постоянно теряять свои пропорции */
    transition: 500ms;
}

.collections__line {
    height: 90%; /* 90% от родителя (от всей высоты карточки), всерху и снизу остались отступы по 5% */
    transform: translateY(-50%); /* поставить по центру 1 действие */
    position: absolute;
    top: 50%; /* поставить по центру 2 действие, сместит картинку ровно на 50%, затем с помощью свойства transform: translateY(-50%) мы возьмем половино от высоты карточки и поднимим в минус 50%, тогда она выравнивается ровно по центру*/
    transition: 500ms;
}

.collections__line:nth-last-of-type(1) /* обращение к порядковому номеру с конца, но не по порядковому номеру внутри самого элемента, по типу нашего тега img, мы берем именно последний тег img */ {
    right: 7px;
}

.collections__line:nth-last-of-type(2) {
    left: 7px;
}

.collections__icon {
    transition: 500ms;
    margin-bottom: 15px;
}

.collections__item-title {
    color: white; 
    font-size: 20px; 
    font-weight: 700;
    text-align: center;
    line-height: 100%;
}
    
